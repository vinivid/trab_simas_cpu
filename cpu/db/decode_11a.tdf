--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=4 LPM_WIDTH=2 data eq
--VERSION_BEGIN 24.1 cbx_cycloneii 2025:03:05:20:06:36:SC cbx_lpm_add_sub 2025:03:05:20:06:36:SC cbx_lpm_compare 2025:03:05:20:06:36:SC cbx_lpm_decode 2025:03:05:20:06:36:SC cbx_mgl 2025:03:05:20:07:01:SC cbx_nadder 2025:03:05:20:06:36:SC cbx_stratix 2025:03:05:20:06:36:SC cbx_stratixii 2025:03:05:20:06:36:SC  VERSION_END


-- Copyright (C) 2025  Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Altera and sold by Altera or its authorized distributors.  Please
--  refer to the Altera Software License Subscription Agreements 
--  on the Quartus Prime software download page.



--synthesis_resources = lut 4 
SUBDESIGN decode_11a
( 
	data[1..0]	:	input;
	eq[3..0]	:	output;
) 
VARIABLE 
	data_wire[1..0]	: WIRE;
	eq_node[3..0]	: WIRE;
	eq_wire[3..0]	: WIRE;
	w_anode461w[2..0]	: WIRE;
	w_anode475w[2..0]	: WIRE;
	w_anode484w[2..0]	: WIRE;
	w_anode493w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[3..0] = eq_wire[3..0];
	eq_wire[] = ( w_anode493w[2..2], w_anode484w[2..2], w_anode475w[2..2], w_anode461w[2..2]);
	w_anode461w[] = ( (w_anode461w[1..1] & (! data_wire[1..1])), (w_anode461w[0..0] & (! data_wire[0..0])), B"1");
	w_anode475w[] = ( (w_anode475w[1..1] & (! data_wire[1..1])), (w_anode475w[0..0] & data_wire[0..0]), B"1");
	w_anode484w[] = ( (w_anode484w[1..1] & data_wire[1..1]), (w_anode484w[0..0] & (! data_wire[0..0])), B"1");
	w_anode493w[] = ( (w_anode493w[1..1] & data_wire[1..1]), (w_anode493w[0..0] & data_wire[0..0]), B"1");
END;
--VALID FILE
